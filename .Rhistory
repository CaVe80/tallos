apropos("design")
apropos("mi")
apropos("cars")
?interaction.plot()
with(ToothGrowth, {
interaction.plot(dose, supp, len, fixed = TRUE)
with(ToothGrowth, {
interaction.plot(dose, supp, len, fixed = TRUE)
dose <- ordered(dose)
interaction.plot(dose, supp, len, fixed = TRUE, col = 2:3, leg.bty = "o")
interaction.plot(dose, supp, len, fixed = TRUE, col = 2:3, type = "p")
})
interaction.plot(ToothGrowth$dose, ToothGrowth$supp, ToothGrowth$len, fixed = TRUE)
names(mtcars)
table(mtcars$cyl)
table(mtcars$wt)
table(mtcars$am)
interaction.plot(as.factor(mtcars$cyl), as.factor(mtcars$am), mtcars$wt)
design.rcbd <- design.rcbd(trt,
r = rep,
seed = 42,
serie = 0)
trt <- letters[1:4]
rep <- 4
design.rcbd <- design.rcbd(trt,
r = rep,
seed = 42,
serie = 0)
design.rcbd
plot(design.rcbd)
design.rcbd <- design.rcbd(trt,
r = rep,
seed = 42,
serie = 2)
design.rcbd
design.rcbd$$sketch
design.rcbd$sketch
design.rcbd <- design.rcbd(trt,
r = 7,
seed = 42,
serie = 2)
design.rcbd$sketch
design.rcbd
design.rcbd <- design.rcbd(trt,
r = 7,
seed = 42,
serie = 1: 11)
design.rcbd <- design.rcbd(trt,
r = 7,
seed = 42,
serie = 12)
design.rcbd
design.rcbd <- design.rcbd(trt,
r = 7,
seed = 42,
serie = 1002)
design.rcbd
design.rcbd <- design.rcbd(trt,
r = 7,
seed = 42,
serie = 0)
design.rcbd
design.rcbd <- design.rcbd(trt = c("a","b"),		#tratamiento a aplicar
r = 7,			#numero de repeticiones
seed = 42,			#para repeticion
serie = 0)			#dejar en 0
design.rcbd
design.bib(letters[1:4], k = 3, r = 6, serie = 0, seed = 42)
?md.pattern
install.packages("mice")
?shapiro.test
install.packages("lavaan")
library("lavaan", lib.loc="~/R/win-library/3.4")
?cfa
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
cfa(visual  =~ x1 + x2 + x3, data=HolzingerSwineford1939)
cfa("visual =~ x1 + x2 + x3", data=HolzingerSwineford1939)
summary(fit)
fit
args(fit)
aaa <- summary(fit)
summary(fit, fit.measures=TRUE)
HS.model <- ' visual  =~ x1 + x2 + x3 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
summary(fit, fit.measures=F)
summary(fit, standardized = TRUE)
visual
library("lavaan", lib.loc="~/R/win-library/3.4")
install.packages("semPlot")
library("semPlot", lib.loc="~/R/win-library/3.4")
?cfa
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
semPaths(fit)
?semPaths
semPaths(fit, whatLabels = "std")
summary(fit, fit.measures=TRUE, standardized = TRUE)
semPaths(fit, whatLabels = "std", edge.label.cex = 1)
semPaths(fit, whatLabels = "std", edge.label.cex = 1, layout = "circle")
semPaths(fit, whatLabels = "std", edge.label.cex = 1, layout = "circle", rotation = 3)
semPaths(fit, whatLabels = "std", edge.label.cex = 1, rotation = 3)
semPaths(fit, whatLabels = "std", edge.label.cex = 1, rotation = 3, edge.color = "purple")
semPaths(fit, whatLabels = "std", edge.label.cex = 1, rotation = 3, what = "std",edge.color = "purple")
semPaths(fit, whatLabels = "std", edge.label.cex = 1, rotation = 3, what = "std")
library("lavaan", lib.loc="~/R/win-library/3.4")
# The Holzinger and Swineford (1939) example
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- lavaan(HS.model, data=HolzingerSwineford1939,
auto.var=TRUE, auto.fix.first=TRUE,
auto.cov.lv.x=TRUE)
summary(fit, fit.measures=TRUE)
wd
wdir
getwd
getwd()
load("~/.RData")
library(nlme)
library("lme4", lib.loc="~/R/win-library/3.4")
?glmer
.8-.9
-.8, -.7
-.8 -.7
round(1.5)
round(2.5)
round(2.675,2)
require(httr)
require(jsonlite)
patch = "https://ddragon.leagueoflegends.com/api/versions.json"
con <- GET(patch)
parch
parch
patch
con
data <- fromJSON(con )
content(con)
content(con)[[1]]
require(dplyr)
con <- GET(patch) %>% content()[[1]]
con
con <- GET(patch) %>% content()
con <- GET(patch) %>% content()[[1]]
con <- GET(patch) %>% content()[[1]]
con <- GET(patch) %>% content()
con[[1]]
?cat
cat("hola","hola")
cat0("hola","hola")
cat0("hola","hola")
paste0("hola","hola")
url <- paste0("http://ddragon.leagueoflegends.com/cdn/",con[[1]],"/data/en_US/championFull.json"
)
url
content(url)
con2 <- GET(url) %>% content()
names(con2)
con2.data
con2$data
names(con2$data)
str(con2)
str(con2,max.level = 1)
str(con2$data,max.level = 1)
str(con2$data$Garen,max.level = 1)
data <- fromJSON(content(con2, as = "text"))
data <- fromJSON(content(con2, as = "text"),simplifyVector = T))
data <- fromJSON(content(con2, as = "text"),simplifyVector = T)
con2 <- GET(url)
data <- fromJSON(content(con2, as = "text"),simplifyVector = T)
str(con2, max.level = 1)
con2
con2 <- GET(url) %>% content(as = "text")
data <- fromJSON(content(con2,simplifyVector = T)
)
data <- fromJSON(con2,simplifyVector = T)
str(data,max.level = 1)
str(data$data,max.level = 1)
data$data
str(data$data,max.level = 1)
str(data$data$Garen,max.level = 1)
require(tibble)
requiere(purrr)
require(purrr)
data1 <- transpose(data$data)[["stats"]]
data1
data <- fromJSON(con2,simplifyVector = T) %>%
unlist()
data
data2 <- transpose(data)[["stats"]] %>%  unlist()
data2 <- transpose(data)[["stats"]]
data <- fromJSON(con2,simplifyVector = T)
data2 <- transpose(data$data)[["stats"]] %>%  unlist()
data2
data2 <- transpose(data$data)[["stats"]][-1] %>%  unlist()
data2
data2 <- transpose(data$data)[["stats"]] %>%  unlist()
data2
data <- fromJSON(con2)
data2 <- transpose(data$data)[["stats"]] %>%  unlist()
data2
con2 <- GET(url) %>% content()
data2 <- transpose(con2$data)[["stats"]] %>%  unlist()
data2
?fromJSON
data <- fromJSON(con2, flatten = T)
data2 <- transpose(con2$data)[["stats"]] %>%  unlist()
data2
con2$data$Garen$stats
unlist(con2$data$Garen$stats)
x = unlist(con2$data$Garen$stats)
type(X)
type(x)
class(x)
y = unlist(con2$data$Malzahar$stats)
rbine(x,y)
rbind(x,y)
names(con2$data$Malzahar)
z = rbind(x,y)
for i in seq_along(con2$data){print(i)}
for(i in seq_along(con2$data)){print(i)}
con$data[1]$name
con$data[1]
con$data[[1]
]
con$data
con2$data[1]
con2$data[1]$name
con2$data[1]
names(con2$data[1])
names(con2$data)
names(con2$data[1:2])
con2$data[1]
con2$data[[1]
]
con2$data[[1]]$name
con2$data[[1]]$stats
for(i in seq_along(con2$data)){
print(i$name)
}
for(i in seq_along(con2$data)){
print(con2$data[[i]]$name)
}
f <- list(x=1, y = 2)
f
x <- "aatroz"
f <- list(x)
f
f <- list(x == "a")
f
f <- list(x = "a")
f
f <- list(con2$data[[1]]$name = "a")
f <- list(con2$data[[1]]$name)
f
f <- list(con2$data[[1]]$name = 1)
f <- c()
f <- cbind(f, c(x=1,y=2))
f
f <- rbind(f, c(x=1,y=2))
len(f)
length(f)
f <- c()
f <- rbind(f, c(x=1,y=2))
f
data_frame(con2$data[[1]]$stats)
con2$data[[1]]$stats
data_frame(unlist(con2$data[[1]]$stats))
unlist(con2$data[[1]]$stats)
x <- unlist(con2$data[[1]]$stats)
y <- unlist(con2$data[[2]]$stats)
z <- rbind(x,y)
z
data_frame(z)
data_frame(x)
as.data.frame(z)
data.frame(z)
stats <- c()
for(i in seq_along(con2$data)){
stat <-  unlist(con2$data[[i]]$stats)
stats <-  rbind(stats,stat)
}
stats
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,unlist(con2$data[[i]]$stats))
}
stats
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,cbind(name = "Hola", unlist(con2$data[[i]]$stats))
}
cbind(name= "hola", otro="tambien")
cbind(name= "hola", unlist(con2$data[[1]]$stats))
cbind("hola", unlist(con2$data[[1]]$stats))
unlist(con2$data[[1]]$stats)
cbind(unlist(con2$data[[1]]$stats), 3)
rbind(unlist(con2$data[[1]]$stats), 3)
rbind(unlist(con2$data[[1]]$stats), hola = 3)
cbind(unlist(con2$data[[1]]$stats), hola = 3)
append(unlist(con2$data[[1]]$stats), hola = 3)
append(unlist(con2$data[[1]]$stats), 3)
append(unlist(con2$data[[1]]$stats), c(hola = 3))
rbind(unlist(con2$data[[1]]$stats), c(hola = 3))
cbind(unlist(con2$data[[1]]$stats), c(hola = 3))
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = "Hola"), unlist(con2$data[[i]]$stats))
}
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = "Hola"), unlist(con2$data[[i]]$stats))
}
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = "Hola"), unlist(con2$data[[i]]$stats)))}
stats
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = con2$data[[i]]$name), unlist(con2$data[[i]]$stats)))}
stats
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = con2$data[[i]]$name), unlist(con2$data[[i]]$stats)))}
stats
as.numeric("2.1")
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = con2$data[[i]]$name), as.numeric(unlist(con2$data[[i]]$stats))))}
stats
stats <- data.frame(stats)
stats <- c()
for(i in seq_along(con2$data)){
stats <-  rbind(stats,append(c(name = con2$data[[i]]$name), unlist(con2$data[[i]]$stats)))}
stats <- data.frame(stats)
stats
stats["hp"]
stats["hp":"attackspeedperlevel"]
stats[-"name"]
stats[-1]
stats[-1] <- as.nueric(stats[-1])
stats[-1] <- as.numeric(stats[-1])
stats
summary(stats)
str(stat)
str(stats)
stats[,-1]
stats[,-1] <- as.numeric(stats[,-1])
lista <- list(list(a=1,b=2),list(a=3,b=4))
lista
unlist(lista)
data.frame(lista)
install.packages("data.tree")
library("data.tree", lib.loc="~/R/win-library/3.4")
ok <- as.Node(con2)
warnings()
ok
print(ok,"data")
reposLoL <- fromJSON("https://api.github.com/users/hadley/repos", simplifyDataFrame = FALSE)
library(data.tree)
repos <- as.Node(reposLoL)
print(repos, "id", "login")
print(ok,"stats")
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("C:/Users/camil/Desktop/aquac")
load("datos_tallos.RData")
datos_tallos
ggplot(datos_tallos, aes(n_tallos, fill = trat)) +
geom_histogram(bins = 10, alpha = 0.5) +
labs(title = "Histograma numero de tallos", x = "Numero de Tallos", y = "Conteo", fill ="Tratamiento")
ggplot(datos_tallos, aes(long_tallo_p, fill = trat)) +
geom_histogram(bins = 10, alpha = 0.5) +
labs(title = "Histograma Largo tallo principal", x = "Largo tallo principal", y = "Conteo", fill ="Tratamiento")
ggplot(datos_tallos, aes(jitter(Sem), n_tallos, col = trat)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "loess") +
labs(title = "Numero de tallos por semana", x = "Semana", y = "Numero de Tallos", col = "Tratamiento")
ggplot(datos_tallos, aes(jitter(Sem), long_tallo_p, col = trat)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "loess") +
labs(title = "Largo tallo principal por semana", x = "Semana", y = "Largo tallo principal", col = "Tratamiento")
datos_tallos %>%
group_by(Sem,trat) %>%             #agrupamos por semana y tratmiento
summarise(Promedio_tallos = mean(n_tallos), Promedio_largo_tallo_principal = mean(long_tallo_p))
raiz_n_tallos = sqrt(datos_tallos$n_tallos) #transformacion de datos
modelo_n_tallos = lm(raiz_n_tallos~Sem*trat, data = datos_tallos) #creacion del modelo
summary(modelo_n_tallos) #resumen del modelo
par(mfrow = c(2,2))
plot(modelo_n_tallos)
anova(modelo_n_tallos)
ggplot(datos_tallos, aes(jitter(Sem), raiz_n_tallos, col = trat)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm") +
labs(title = "Raiz Numero de tallos por semana", x = "Semana", y = "Raiz Numero de Tallos", col = "Tratamiento") +
scale_color_manual(labels = c("Regresion Acuaponico", "Regresion Suelo"), values = c("blue", "red"))
Diferencia_cantidad_tallos <- datos_tallos %>%
group_by(Sem,trat) %>%             #agrupamos por semana y tratmiento
summarise(Promedio_tallos = mean(n_tallos)) %>%
spread(trat,Promedio_tallos) %>%
summarise(Diferencia_promedio_numero_tallos_acua_suelo = A - S)
Diferencia_cantidad_tallos
ggplot(Diferencia_cantidad_tallos, aes(Sem, Diferencia_promedio_numero_tallos_acua_suelo)) +
geom_line(col = "blue", lwd = 2) +
labs(title = "Diferencia promedio entre numero de tallos \n (Acuaponico - Suelo)", x = "Semana", y = "Numero promedio de Tallos")
View(datos_tallos)
ggplot(datos_tallos, aes(Sem, long_tallo_p, fill = trat)) +
geom_bar(stat="identity", width=.5, position = "dodge") +
labs(title = "Diferencia promedio entre numero de tallos \n (Acuaponico - Suelo)", x = "Semana", y = "Numero promedio de Tallos")
ggplot(datos_tallos, aes(Sem, long_tallo_p, fill = trat)) +
geom_bar(stat="identity", width=.5, position = "dodge") +
labs(title = "Longitud de los tallos \n (Acuaponico - Suelo)", x = "Semana", y = "longitud tallo principal")
ggplot(datos_tallos, aes(Sem, long_tallo_p, fill = trat)) +
geom_bar(stat="identity", width=.5, position = "dodge") +
labs(title = "Longitud tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "longitud tallo principal")
ggplot(datos_tallos, aes(Sem, long_tallo_p, fill = trat)) +
geom_bar(stat="identity", width=.5, position = "dodge") +
labs(title = "Longitud tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "longitud tallo principal")
ggplot(Diferencia_cantidad_tallos, aes(Sem, Diferencia_promedio_numero_tallos_acua_suelo)) +
geom_line(col = "blue", lwd = 2) +
labs(title = "Diferencia promedio entre numero de tallos \n (Acuaponico - Suelo)", x = "Semana", y = "Numero promedio de Tallos")
ggplot(datos_tallos, aes(Sem, long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Diferencia promedio entre el largo del tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Diferencia promedio entre el largo del tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")
summary(datos_tallos)
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_color_manual(labels = c("Acuaponico", "Suelo"), values = c("blue", "red"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_color_manual(labels = c("Acuaponico", "Suelo"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("blue", "red"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("#999999", "#56B4E9"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("#56B4E9", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightseagreen
", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightblue
", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("blue
", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("blue", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightblue", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightseablue", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightblue", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightseagreen", "#E69F00"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(labels = c("Acuaponico", "Suelo"), values = c("lightseagreen", "lightgoldenrod4"))
ggplot(datos_tallos, aes(as.factor(Sem), long_tallo_p, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(name ="Tratamiento",labels = c("Acuaponico", "Suelo"), values = c("lightseagreen", "lightgoldenrod4"))
ggplot(datos_tallos, aes(as.factor(Sem), n_tallos, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(name ="Tratamiento",labels = c("Acuaponico", "Suelo"), values = c("lightseagreen", "lightgoldenrod4"))
ggplot(datos_tallos, aes(as.factor(Sem), n_tallos, fill = trat)) +
geom_bar(stat="identity", position = "dodge") +
labs(title = "Largo tallo principal \n (Acuaponico - Suelo)", x = "Semana", y = "Largo promedio tallo principal")+
scale_fill_manual(name ="Tratamiento",labels = c("Acuaponico", "Suelo"), values = c("lightseagreen", "lightgoldenrod4"))
